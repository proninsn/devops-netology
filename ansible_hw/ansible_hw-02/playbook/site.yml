---
- name: Install ClickHouse
  hosts: clickhouse
  become: true
  vars:
    clickhouse_version: "22.3.3.44"
    clickhouse_packages:
      - clickhouse-client
      - clickhouse-server
      - clickhouse-common-static
  handlers:
    - name: Start clickhouse service
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted

  tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        name: [apt-transport-https, ca-certificates, dirmngr, gnupg, software-properties-common, curl]
        state: present
        update_cache: true

    - name: Download ClickHouse install script
      ansible.builtin.get_url:
        url: "https://clickhouse.com/install.sh"
        dest: "/tmp/clickhouse-install.sh"
        mode: '0755'

    - name: Install ClickHouse using official script
      ansible.builtin.command: "/tmp/clickhouse-install.sh"
      args:
        creates: "/usr/bin/clickhouse-client"  # Проверяем, что клиент уже установлен
      register: install_result
      changed_when: "'already installed' not in install_result.stdout"

    - name: Ensure ClickHouse is running
      ansible.builtin.service:
        name: clickhouse-server
        state: started
        enabled: true

    - name: Create logs database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82  # Код 82 - база уже существует
      changed_when: create_db.rc == 0

- name: Install and configure Vector
  hosts: clickhouse
  vars:
    vector_version: "0.28.1"
    vector_config_dir: "/etc/vector"
  handlers:
    - name: Restart Vector
      become: true
      ansible.builtin.service:
        name: vector
        state: restarted
  tasks:
    - name: Download Vector
      ansible.builtin.get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-gnu.tar.gz"
        dest: "/tmp/vector-{{ vector_version }}.tar.gz"
        mode: '0644'

    - name: Create Vector directory
      ansible.builtin.file:
        path: "/opt/vector-{{ vector_version }}"
        state: directory
        mode: '0755'

    - name: Extract Vector
      ansible.builtin.unarchive:
        src: "/tmp/vector-{{ vector_version }}.tar.gz"
        dest: "/opt/vector-{{ vector_version }}"
        remote_src: true
        extra_opts: [--strip-components=1]

    - name: Create symlink to Vector binary
      ansible.builtin.file:
        src: "/opt/vector-{{ vector_version }}/bin/vector"
        dest: "/usr/bin/vector"
        state: link
        force: true

    - name: Create Vector config directory
      ansible.builtin.file:
        path: "{{ vector_config_dir }}"
        state: directory
        mode: '0755'

    - name: Deploy Vector config
      ansible.builtin.template:
        src: "vector.yml.j2"
        dest: "{{ vector_config_dir }}/vector.yml"
        mode: '0644'
      notify: Restart Vector

    - name: Create systemd service for Vector
      ansible.builtin.template:
        src: "vector.service.j2"
        dest: "/etc/systemd/system/vector.service"
        mode: '0644'
      notify: Restart Vector

    - name: Enable and start Vector service
      become: true
      ansible.builtin.service:
        name: vector
        state: started
        enabled: true
